N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR mean>
N6symbol6SymbolE<LPARENT (>
lexer: tracing back to N6symbol6SymbolE<Type::IDENFR mean>
lexer: tracing back to N6symbol6SymbolE<INTTK int>
lexer: retracting N6symbol6SymbolE<Type::IDENFR mean>
lexer: retracting N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<CONSTTK const>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR MAX_N>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 10000>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<CONSTTK const>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR ERR>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR tmp>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<LBRACK [>
N6symbol6SymbolE<Type::INTCON 10000>
N6symbol6SymbolE<RBRACK ]>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<GRE >>
N6symbol6SymbolE<Type::IDENFR MAX_N>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON Too much input >
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR ERR>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<LSS <>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<SCANFTK scanf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR tmp>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<LBRACK [>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<RBRACK ]>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR tmp>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<LSS <>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR result>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<VOIDTK void>
N6symbol6SymbolE<Type::IDENFR testmean>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<WHILETK while>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<SCANFTK scanf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON please input numbers to calc mean>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR mean>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON mean value is >
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR isOdd>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<CONSTTK const>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR TWO>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR half>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR half>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::IDENFR TWO>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::IDENFR half>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR isEven>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<CONSTTK const>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR TWO>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR half>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR half>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::IDENFR TWO>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::IDENFR half>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR pick>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR odd>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<LEQ <=>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON unexpected error happened>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR odd>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR pick>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR isEven>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<ELSETK else>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR pick>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR isOdd>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR pick2>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<LEQ <=>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR num>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<VOIDTK void>
N6symbol6SymbolE<Type::IDENFR testpick>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR exp>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR tmp>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<WHILETK while>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<SCANFTK scanf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<SCANFTK scanf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR exp>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR exp>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR tmp>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR exp>
N6symbol6SymbolE<GRE >>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR exp>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR exp>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 10>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR pick>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR pick2>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR base>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<VOIDTK void>
N6symbol6SymbolE<Type::IDENFR test1>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON >
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<LSS <>
N6symbol6SymbolE<Type::INTCON 5>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<LSS <>
N6symbol6SymbolE<Type::INTCON 5>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<LSS <>
N6symbol6SymbolE<Type::INTCON 5>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<NEQ !=>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<NEQ !=>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<NEQ !=>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR j>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR k>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR mod>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR a>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR b>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR a>
N6symbol6SymbolE<MINU ->
N6symbol6SymbolE<Type::IDENFR a>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::IDENFR b>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::IDENFR b>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<VOIDTK void>
N6symbol6SymbolE<Type::IDENFR test2>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR reversedInteger>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR remainder>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR originalInteger>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<WHILETK while>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR reversedInteger>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON input an integer please:>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<SCANFTK scanf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<Type::IDENFR originalInteger>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<WHILETK while>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<NEQ !=>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR remainder>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR mod>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::INTCON 10>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR reversedInteger>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR reversedInteger>
N6symbol6SymbolE<MULT *>
N6symbol6SymbolE<Type::INTCON 10>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::IDENFR remainder>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::INTCON 10>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR originalInteger>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::IDENFR reversedInteger>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON is palindrome>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR originalInteger>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<ELSETK else>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON not palindrome>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR originalInteger>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<VOIDTK void>
N6symbol6SymbolE<Type::IDENFR test3>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<INTTK int>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR flag>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<WHILETK while>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR flag>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON input a positive integer please:>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<SCANFTK scanf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<FORTK for>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<LEQ <=>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<DIV />
N6symbol6SymbolE<Type::INTCON 2>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<PLUS +>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR mod>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR flag>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::INTCON 1>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR i>
N6symbol6SymbolE<ASSIGN =>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<IFTK if>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::IDENFR flag>
N6symbol6SymbolE<EQL ==>
N6symbol6SymbolE<Type::INTCON 0>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON is prime>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<ELSETK else>
N6symbol6SymbolE<PRINTFTK printf>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<Type::STRCON not prime>
N6symbol6SymbolE<COMMA ,>
N6symbol6SymbolE<Type::IDENFR n>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<RETURNTK return>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
N6symbol6SymbolE<VOIDTK void>
N6symbol6SymbolE<MAINTK main>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<LBRACE {>
N6symbol6SymbolE<Type::IDENFR testmean>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR testpick>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR test1>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR test2>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<Type::IDENFR test3>
N6symbol6SymbolE<LPARENT (>
N6symbol6SymbolE<RPARENT )>
N6symbol6SymbolE<SEMICN ;>
N6symbol6SymbolE<RBRACE }>
