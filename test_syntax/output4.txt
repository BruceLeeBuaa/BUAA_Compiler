INTTK int
IDENFR func1
<声明头部>
LPARENT (
CHARTK char
IDENFR ch
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR ch
<因子>
<项>
<表达式>
GEQ >=
CHARCON 0
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR ch
<因子>
<项>
<表达式>
LEQ <=
CHARCON 9
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR MIN
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR ch
ASSIGN =
CHARCON y
<常量定义>
SEMICN ;
<常量说明>
CHARTK char
IDENFR s
LBRACK [
INTCON 1001
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
INTTK int
IDENFR n
<变量定义>
SEMICN ;
INTTK int
IDENFR i
<变量定义>
SEMICN ;
INTTK int
IDENFR num
<变量定义>
SEMICN ;
<变量说明>
SCANFTK scanf
LPARENT (
IDENFR n
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR s
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
CHARCON 1
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR s
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
CHARCON 2
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR s
LBRACK [
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
CHARCON +
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR s
LBRACK [
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
CHARCON 3
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR s
LBRACK [
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
CHARCON 0
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
GRE >
IDENFR i
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR func1
LPARENT (
IDENFR s
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
NEQ !=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR func1
LPARENT (
IDENFR s
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR num
ASSIGN =
IDENFR num
<因子>
MULT *
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
PLUS +
IDENFR s
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
CHARCON 0
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON %d\n
<字符串>
COMMA ,
IDENFR num
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR num
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
